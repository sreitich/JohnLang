JohnLang {

    Program     = Statement+

    Statement   = VarDec
                | FunDec
                | Assignment
                | IfStmt
                | LoopStmt
                | Call
                | DotExp
                | DotCall
                | ClassDec
                | Return
                | break

    VarDecl     = Type id ":" Exp "!"

    FunDec      = function id Params ":" Type Block
    Params      = "(" ListOf<Param, ","> ")"
    Param       = Type id

    Assignment  =

    IfStmt =

    LoopStmt =

    Call =

    DotExp =
    DotCall =

    ClassDec =
    ObjectDec =

    Return =

    Exp         = Exp2 ("||" Exp2)+                             --or
                | Exp2 ("&&" Exp2)+                             --and
                | Exp2
    Exp2        = Exp3 relop Exp3                               --compare
                | Exp3
    Exp3        = Exp3 ("+" | "-") Exp4                         --add
                | Exp4
    Exp4        = Exp4 ("*"| "/" | "%") Exp5                    --multiply
                | Exp5
    Exp5        = Exp6 "**" Exp5                                --power
                | ("-" | not) Exp6                              --unary
                | Exp6
    Exp6        = true
                | false
                | floatlit
                | intlit
                | ArrayLit
                | MapLit
                | Call
                | DotExp
                | DotCall
                | ObjectDec
                | Exp6 "[" Exp "]"                              --subscript
                | stringlit
                | id
                | "(" Exp ")"                                   --parens

    Type        = id
    relop       = "<=" | "<" | "==" | "!=" | ">=" | ">"

    floatlit    = digit+ "." digit+ (("E" | "e") ("+" | "-")? digit+)?
    intlit      = digit+
    stringlit   = "\"" char* "\""
    char        = ~"\\" ~"\"" any
                | "\\" ("n" | "t" | "\"" | "\\")                --escape
                | "\\u{" hex hex? hex? hex? hex? hex? "}"       --codepoint
    hex         = hexDigit

    ArrayLit    = "[" ListOf<Exp, ","> "]"
    MapLit      = "{" ListOf<MapEntry, ","> "}"
    MapLitEntry = Exp6 ":" Exp

    function    = "gitErDone" ~idchar
    if          = "ope" ~idchar
    else        = "welp" ~idchar
    for         = "tilTheCowsComeHome" ~idchari
    while       = "holdMyBeer" ~idchar
    class       = "doohickey" ~idchar
    this        = "me" ~idchar
    constructor = "slapTogether" ~idchar
    new         = "whipUp" ~idchar
    return      = "betterGetGoin" ~idchar
    break       = "letsBlowThisPopsicleStand" ~idchar
    continue    = "letsNotGetCarriedAway" ~idchar
    true        = "youBetcha" ~idchar
    false       = "thinkAgainPal" ~idchar
    not         = "nah" ~idchar
    list        = "todo" ~idchar
    dict        = "almanac" ~idchar

    id          = ~keyword letter idchar*
    idchar      = letter | digit | "_"

    keyword     = function | if | else | for | while | class | this | constructor | new | return |
                | break | continue | true | false | not | list | dict
}
